http://web.archive.org/web/20150706184414id_/http://www.dailymail.co.uk/sciencetech/article-2876127/Will-computers-wiped-19-January-2038-Outdated-PC-systems-not-able-cope-time-date-experts-warn.html

the end of the computer is nigh			0
when the clock strikes 14 minutes and seven seconds past three on the morning of tuesday 19 january 2038 @entity3 , a bug is expected to hit the web			1
any computer , program , server or gadget running a 32 - bit system could then fail , on a global scale , unless they are patched and upgraded in advance			1
this is known as the @entity15 , and is a theory that was recently proved when @entity18 's @entity17 exceeded two billion views on @entity20			2
once the time reaches 03:14:07 utc on tuesday , 19 january 2038 , affected computers will not be able to distinguish between the real time and date , and the year 1901			1
this could wipe out programs that rely on the internal clock to make measurements the @entity15 , or @entity15 , specifically affects software using a 32 - bit integer system			1
it is a similar problem that was faced in the year 2000 , when the @entity35 , also known as the @entity36 , meant certain computers could n't distinguish between the years 1900 and 2000			0
32 - bit systems use four bytes , which mean they can use @entity40 of memory in one go			1
by comparison , a 16 - bit system uses two bytes and 64 - bit systems use eight			1
once the bug hits , affected computers will not be able to distinguish between the real time and date , and the year 1901			2
for some computers this will simply mean the date is shown as incorrect , but it could equally wipe out computers and programs that rely on the internal clock to make precise measurements , for example			2
it could also cause software to crash			0
many phones , for example , as well as flight systems and cars use embedded systems that rely on storing accurate times and dates			2
some programs that work with future dates may also start experiencing problems sooner			0
for example , a program that looks ahead 20 years will need to be fixed by 2018			0
after 2018 , it wo n't be able to register dates after 19 january 2038 and bugs may appear			2
these systems store memory and carry out processes using binary digits , represented as 0 or 1 - and the total number of digits a 32 - bit system can represent is 4,294,967,295			1
but because half of the values are negative , and half are positive this does n't range from zero up to 4,294,967,295			0
instead , the total numbers range from -2,147,483,648 to 2,147,483,647 , thus making the upper limit of a 32 - bit system 2,147,483,647			1
this means there is only a limited amount of storage that can be used to store all the binary 0 and 1 numbers			2
@entity20 was set up on a 32 - bit system and when @entity18 's @entity17 video reached this upper limit of views , the counter broke			1
to solve the problem , @entity101 updated the system to 64 - bits , which can handle 9,223,372,036,854,775,807 views , or more than 9 quintillion			0
at the time , @entity101 said in a blog post : ‘ we never thought a video would be watched in numbers greater than a 32 - bit integer ( = 2,147,483,647 views ) , but that was before we met @entity18			1
" @entity17 " has been viewed so many times we have to upgrade ! ’ the standard four - byte format assumes the beginning of time is 1 january , 1970 , at 12:00:00 a.m. when the clock strikes 03:14:07 utc on tuesday , 19 january 2038 , a total of 2147483647 seconds since 1 january 1970 will have passed			1
the @entity118 above illustrates how the binary code , the decimal number and the date will appear when computers reach 03:14 utc on 19 january 2038			1
to solve the problem , software manufacturers will need to update to a 64 - bit system @entity20 was set up on a 32 - bit system and when @entity18 's @entity17 video reached the system 's upper limit of the amount of data it can store , the counter broke			1
to solve the problem , @entity101 updated @entity20 to run on 64 - bits , which can handle 9,223,372,036,854,775,807 views , or more than 9 quintillion at the time of writing , 2,175,046,789 people have watched the music video with its distinctive horsey dance			2
the number is displayed after digits spin around ( screenshot ) when the mouse hovered over them the @entity15 , or @entity15 , specifically affects software using a 32 - bit integer system and has been theorised for years			1
32 - bit systems use four bytes , which mean they can use @entity40 of memory in one go			1
by comparison , a 16 - bit system uses two bytes and 64 - bit systems use eight			1
the upper limit of numbers that a 32 - bit system can store is 2,147,483,647			1
this standard four - byte format assumes the beginning of time is 1 january , 1970 , at 12:00:00 a.m. when the clock strikes 03:14:07 utc on tuesday , 19 january 2038 , a total of 2147483647 seconds since the 1 january 1970 will have passed			1
computers will then not be able to distinguish between the real time and date , and the year 1901			0
this is called an ' integer overflow ' , and means the counter has run out of usable bits and begins reporting a negative number			0
computers will then not be able to distinguish between the real time and date , and the year 1901			0
this is called an ' integer overflow ' , and means the counter has run out of usable bits and begins reporting a negative number			0
for some computers , this will simply mean the date is shown as incorrect , but it could equally wipe out computers and programs that rely on the internal clock to make precise measurements , for example			0
it could also cause software to crash			0
many phones , for example , as well as flight systems and cars use embedded systems that rely on storing accurate times and dates			0
in particular , the bug affects the @entity199 operating system , which powers @entity201 and @entity202 phones , as well as most internet servers			0
some programs that work with future dates may also start experiencing problems sooner			0
for example , a program that looks ahead 20 years will need to be fixed by 2018			0
after 2018 , it wo n't be able to register dates after 19 january 2038 and bugs may appear			2
as economist journalist @entity214 explained : ' modern versions of the operating system have solved this problem by moving to a 64 - bit signed integer to count seconds , but some ancient devices or those running ancient software may fail unpredictably			2
' affected systems will need to upgrade in order to avoid any problems .			0

@entity18 ’s @entity17 was recently viewed so many times on @entity20 that the site had to upgrade the way figures are shown on the site
the site ' broke ' because it runs on a 32 - bit system , which uses four - bytes
these systems can only handle a *finite* number of binary digits
a four - byte format assumes time began on 1 january , 1970 , at 12:00:00
at 03:14:07 utc on tuesday , 19 january 2038 , the *maximum* number of seconds that a 32 - bit system can handle will have passed since this date
this will cause computers to run negative numbers , and dates
@entity251 could cause software to crash and computers to be wiped out

@entity3:UTC
@entity17:Gangnam Style
@entity15:Y2038
@entity35:Millennium Bug
@entity199:Unix
@entity36:Y2K
@entity20:YouTube
@entity18:Psy
@entity101:Google
@entity214:Glenn Fleishman
@entity40:4GB
@entity251:Anomaly
@entity202:Apple
@entity201:Android
@entity118:GIF